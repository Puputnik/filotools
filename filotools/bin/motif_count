#!/bin/bash
source $basedir/bin/functions.bash

import_config
check_defaults

optfold="default"
optfold_motif="default"

subset="NO"
keep_hard_clip="FALSE"
keep_soft_clip="FALSE"	
mapping_quality=20
max_readlength=700

num_processes=4

#echo $stats_path
#echo $fastq_path

#ins=( "$@" )
#echo ${ins[@]} 

#while getopts 'chf' OPTION > /dev/null 2>&1; do
while getopts 'COIo:t:l:q:HSs:k:m:h' OPTION; do
  case "$OPTION" in
    h)
       echo "calculates read counts for each readlength bin (1bp) from aligments (.stat files) or .fastq files
	   usage: filotools readl [options] <input_file(s)> 
	   can also glob, example:
	   filotools readl *.bam "
       
	   echo "TYPICAL COMMAND LINE for double barcoded reads: filotools readl -t 30 -s BOTH_BARCODES *.stats"

	   echo "options:
		-o: [CHAR] specify output folder [default = <stats_input_folder>/MOTIF_COUNTS]
		-m: [CHAR] specify input motif folder [default = <stats_input_folder>/MOTIF]
		-t: [INT] number of threads for multiprocessing (default: 4)
		-s: [CHAR] folder containing ids files for subsetting 

		filtering options (only for bam/stats)
		-l: [CHAR] specify path for chr_list files (default: taken from config)
		-q: [INT] specify minimum mapping quality (default: 20)
		-k: [INT] specify max readlength (default: 700)
		-H: don't filter out hard clipped reads
		-S: don't filter out soft clipped reads

Config file is used by default for:

chr_list

-O: force output folder as motif_count_path from config file
-I: force input  folder as motif_path from config file
-C: combination of -O and -I
"
#config file is used for stats_path (if input is bam/stats) or fastq_path (if input is fastq/fastq.gz)"

#-p: infer data folders from file extension. 
#    if input file is .fastq (or .fastq.gz), .bam or .stats, file's folder respectively ovverides fastq_path, bam_path or stats_path from config file and command line
           
           exit 1
    ;;

	o)
		optfold="$OPTARG"
	;;

	m)
		optfold_motif="$OPTARG"
	;;

	t)
		num_processes="$OPTARG"
	;;

	s)
		subset="$OPTARG"
	;;

	#g)
	#	generate_missing_files="on"
	#;;

	l)
		chr_list="$OPTARG"
	;;

	q)
		mapping_quality="$OPTARG"	
	;;
    
	k)
		max_readlength="$OPTARG"
	;;

	H)
		keep_hard_clip="TRUE"
	;;

	S)
		keep_soft_clip="TRUE"	
	;;

	#v)
	#	verbose="on"	
	#;;

	O) 
		force_config_o="on"
	;;
	
	I) 
		force_config_i="on"
	;;

	C) 
		force_config_o="on"
		force_config_i="on"
		force_config="on"
	;;

	
  esac
done
shift $((OPTIND-1))

ins=( "$@" )


#FILE=${ons[0]} 
#echo $FILE


for FILE in ${ins[@]} ; do
	((i=i%num_processes)); ((i++==0)) && wait
	sample="${FILE%%.*}"
	ext="${FILE#*.}"
	echo $sample
	case $ext in
	  "bam" | "stats")

			if [ "$ext" == "bam" ]; then
				if [ "$force_config_i" == "on" ]; then
				in_path=$stats_path
				else
				in_path="$(dirname $(realpath $FILE))/STATS"
				fi
				
			fi

			if [ "$ext" == "stats" ]; then 
				if [ "$force_config_i" == "on" ]; then
				in_path=$stats_path
				else
				in_path=$(dirname $(realpath $FILE)) 
				fi
			fi

			if [ "$optfold_motif" != "default" ]; then
				mo_path=$optfold_motif
				else 
				if [ "$force_config_i" == "on" ]; then
					mo_path=$motif_path
					else
					mo_path=$in_path/MOTIF
				fi
			fi
			

			if [ "$optfold" != "default" ]; then
				outpath=$optfold
				else 
				if [ "$force_config_o" == "on" ]; then
					outpath=$motif_count_path
					else
					outpath=$in_path/MOTIF_COUNTS
				fi
			fi



			echo "extension is $ext"
			echo "in_path is $in_path"
			echo "mo_path is $mo_path"
			echo "outpath is $outpath"
			echo "$basedir/base_scripts/count_motif.R  $chr_list  $in_path  $mo_path $outpath  $sample  $keep_soft_clip  $keep_hard_clip  $mapping_quality  $subset  $max_readlength"
	    	$basedir/base_scripts/count_motif.R  $chr_list  $in_path  $mo_path $outpath  $sample  $keep_soft_clip  $keep_hard_clip  $mapping_quality  $subset  $max_readlength ##### SONO ARRIVATO QUÃ¬!

		;;

	    *)
	    echo -n "$FILE unknown file format, skipping"
	    ;;
	esac &
done

echo "DONE!"


#!/bin/bash

source $basedir/bin/functions.bash

import_config
check_defaults

optfold="default"

num_processes=4

while getopts 'COIo:t:r:h' OPTION; do
  case "$OPTION" in
    h)
       echo "calculates read counts for each readlength bin (1bp) from aligments (.stat files) or .fastq files
	   usage: filotools readl [options] <input_file(s)> 
	   can also glob, example:
	   filotool readl *.bam "
       
	   echo "options:
		-r: [CHAR] specify reference genome 
		-o: specify output folder [ default = <stats_input_folder>/MOTIF ]
		-t: [INT] number of threads for multiprocessing (default: 4)

Config file is used by default for:

reference

-O: force output folder as motif_path 
-I: force input  folder as stats_path 
-C: combination of -O and -I
"
#config file is used for stats_path (if input is bam/stats) or fastq_path (if input is fastq/fastq.gz)"

#-p: infer data folders from file extension. 
#    if input file is .fastq (or .fastq.gz), .bam or .stats, file's folder respectively ovverides fastq_path, bam_path or stats_path from config file and command line
           
           exit 1
    ;;

	I) 
		force_config_i="on"
	;;

	O) 
		force_config_o="on"
	;;

	C) 
		force_config_o="on"
		force_config_i="on"
		force_config="on"
	;;

	#g)
	#	generate_missing_files="on"
	#;;

	o)
		optfold="$OPTARG"
	;;
    
	t)
		num_processes="$OPTARG"
	;;

	#v)
	#	verbose="on"	
	#;;

	r)
		reference="$OPTARG"
	;;

	
  esac
done
shift $((OPTIND-1))

ins=( "$@" )

for FILE in ${ins[@]} ; do
	((i=i%num_processes)); ((i++==0)) && wait
	
	sample="${FILE%%.*}"
	ext="${FILE#*.}"
	echo $sample
	
	case $ext in
	  "bam" | "stats")

			if [ "$ext" == "bam" ]; then
				if [ "$force_config_i" == "on" ]; then
				in_path=$stats_path
				else
				in_path="$(dirname $(realpath $FILE))/STATS"
				fi
			fi

			if [ "$ext" == "stats" ]; then 
				if [ "$force_config_i" == "on" ]; then
				in_path=$stats_path
				else
				in_path=$(dirname $(realpath $FILE)) 
				fi
			fi

			if [ "$optfold" != "default" ]; then
				outpath=$optfold
				else 
				if [ "$force_config_o" == "on" ]; then
					outpath=$motif_path
					else
					outpath=$in_path/MOTIF
				fi
			fi


			echo "extension is $ext"
			echo "in_path is $in_path"
			echo "outpath is $outpath"
	   		#echo $chr_list  $in_path  $outpath  
	   		mkdir -p $outpath
			#echo "bedtools getfasta  -s  -name -tab -fi $reference -bed  $in_path/$sample.stats | awk '{{ print $1, substr($2,1,4)}}' | awk -v FS='::' -v OFS=' ' '{{print $1,$2,$3}}'   >   $outpath/$sample.motif "
	        bedtools getfasta  -s  -name -tab -fi $reference -bed  $in_path/$sample.stats | awk '{{ print $1, substr($2,1,4)}}' | awk -v FS='::' -v OFS=' ' '{{print $1,$2,$3}}'   >   $outpath/$sample.motif
	    ;;

	    *)
	    echo -n "$FILE unknown file format, skipping"
	    ;;
	esac &
done



#optfold = "default" di base outpath è definita dalla path in cui sei + READL_RAW o COUNTS a seconda che sei in fastq o bam/stats
#optfold = "path/to/out" altrimenti puoi specificarla tu, e fottesega di dove ti trovi, lui fa la solita roba e cerca gli stats/fastq esporta in outspec 
#optfold = "config" usa gli output in base al config file  a seconda del file di input (se è fastq allora la mette in READL_RAW, etc)

#echo "DONE!"
